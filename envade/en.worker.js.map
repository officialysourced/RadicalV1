{"version":3,"file":"en.worker.js","sources":["webpack://envade/./node_modules/@mercuryworkshop/bare-mux/dist/index.mjs","webpack://envade/./src/worker/index.ts","webpack://envade/./src/rewriters/url.ts"],"sourcesContent":["const e=20,t=globalThis.fetch,r=globalThis.SharedWorker,a=globalThis.localStorage,s=globalThis.navigator.serviceWorker,o=MessagePort.prototype.postMessage,n={prototype:{send:WebSocket.prototype.send},CLOSED:WebSocket.CLOSED,CLOSING:WebSocket.CLOSING,CONNECTING:WebSocket.CONNECTING,OPEN:WebSocket.OPEN};async function c(){const e=(await self.clients.matchAll({type:\"window\",includeUncontrolled:!0})).map((async e=>{const t=await function(e){let t=new MessageChannel;return new Promise((r=>{e.postMessage({type:\"getPort\",port:t.port2},[t.port2]),t.port1.onmessage=e=>{r(e.data)}}))}(e);return await i(t),t})),t=Promise.race([Promise.any(e),new Promise(((e,t)=>setTimeout(t,1e3,new TypeError(\"timeout\"))))]);try{return await t}catch(e){if(e instanceof AggregateError)throw console.error(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort as all clients returned an invalid MessagePort.\"),new Error(\"All clients returned an invalid MessagePort.\");return console.warn(\"bare-mux: failed to get a bare-mux SharedWorker MessagePort within 1s, retrying\"),await c()}}function i(e){const t=new MessageChannel,r=new Promise(((e,r)=>{t.port1.onmessage=t=>{\"pong\"===t.data.type&&e()},setTimeout(r,1500)}));return o.call(e,{message:{type:\"ping\"},port:t.port2},[t.port2]),r}function l(e,t){const a=new r(e,\"bare-mux-worker\");return t&&s.addEventListener(\"message\",(t=>{if(\"getPort\"===t.data.type&&t.data.port){console.debug(\"bare-mux: recieved request for port from sw\");const a=new r(e,\"bare-mux-worker\");o.call(t.data.port,a.port,[a.port])}})),a.port}let h=null;function d(){if(null===h){const e=new MessageChannel,t=new ReadableStream;let r;try{o.call(e.port1,t,[t]),r=!0}catch(e){r=!1}return h=r,r}return h}class p{constructor(e){this.channel=new BroadcastChannel(\"bare-mux\"),e instanceof MessagePort||e instanceof Promise?this.port=e:this.createChannel(e,!0)}createChannel(e,t){if(self.clients)this.port=c(),this.channel.onmessage=e=>{\"refreshPort\"===e.data.type&&(this.port=c())};else if(e&&SharedWorker){if(!e.startsWith(\"/\")&&!e.includes(\"://\"))throw new Error(\"Invalid URL. Must be absolute or start at the root.\");this.port=l(e,t),console.debug(\"bare-mux: setting localStorage bare-mux-path to\",e),a[\"bare-mux-path\"]=e}else{if(!SharedWorker)throw new Error(\"Unable to get a channel to the SharedWorker.\");{const e=a[\"bare-mux-path\"];if(console.debug(\"bare-mux: got localStorage bare-mux-path:\",e),!e)throw new Error(\"Unable to get bare-mux workerPath from localStorage.\");this.port=l(e,t)}}}async sendMessage(e,t){this.port instanceof Promise&&(this.port=await this.port);try{await i(this.port)}catch{return console.warn(\"bare-mux: Failed to get a ping response from the worker within 1.5s. Assuming port is dead.\"),this.createChannel(),await this.sendMessage(e,t)}const r=new MessageChannel,a=[r.port2,...t||[]],s=new Promise(((e,t)=>{r.port1.onmessage=r=>{const a=r.data;\"error\"===a.type?t(a.error):e(a)}}));return o.call(this.port,{message:e,port:r.port2},a),await s}}class w extends EventTarget{constructor(e,t=[],r,a){super(),this.protocols=t,this.readyState=n.CONNECTING,this.url=e.toString(),this.protocols=t;const s=e=>{this.protocols=e,this.readyState=n.OPEN;const t=new Event(\"open\");this.dispatchEvent(t)},o=async e=>{const t=new MessageEvent(\"message\",{data:e});this.dispatchEvent(t)},c=(e,t)=>{this.readyState=n.CLOSED;const r=new CloseEvent(\"close\",{code:e,reason:t});this.dispatchEvent(r)},i=()=>{this.readyState=n.CLOSED;const e=new Event(\"error\");this.dispatchEvent(e)};this.channel=new MessageChannel,this.channel.port1.onmessage=e=>{\"open\"===e.data.type?s(e.data.args[0]):\"message\"===e.data.type?o(e.data.args[0]):\"close\"===e.data.type?c(e.data.args[0],e.data.args[1]):\"error\"===e.data.type&&i()},r.sendMessage({type:\"websocket\",websocket:{url:e.toString(),protocols:t,requestHeaders:a,channel:this.channel.port2}},[this.channel.port2])}send(...e){if(this.readyState===n.CONNECTING)throw new DOMException(\"Failed to execute 'send' on 'WebSocket': Still in CONNECTING state.\");let t=e[0];t.buffer&&(t=t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)),o.call(this.channel.port1,{type:\"data\",data:t},t instanceof ArrayBuffer?[t]:[])}close(e,t){o.call(this.channel.port1,{type:\"close\",closeCode:e,closeReason:t})}}function u(e,t,r){console.error(`error while processing '${r}': `,t),e.postMessage({type:\"error\",error:t})}function g(e){for(let t=0;t<e.length;t++){const r=e[t];if(!\"!#$%&'*+-.0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ^_`abcdefghijklmnopqrstuvwxyz|~\".includes(r))return!1}return!0}const f=[\"ws:\",\"wss:\"],y=[101,204,205,304],b=[301,302,303,307,308];class m{constructor(e){this.worker=new p(e)}async getTransport(){return(await this.worker.sendMessage({type:\"get\"})).name}async setTransport(e,t,r){await this.setManualTransport(`\\n\\t\\t\\tconst { default: BareTransport } = await import(\"${e}\");\\n\\t\\t\\treturn [BareTransport, \"${e}\"];\\n\\t\\t`,t,r)}async setManualTransport(e,t,r){if(\"bare-mux-remote\"===e)throw new Error(\"Use setRemoteTransport.\");await this.worker.sendMessage({type:\"set\",client:{function:e,args:t}},r)}async setRemoteTransport(e,t){const r=new MessageChannel;r.port1.onmessage=async t=>{const r=t.data.port,a=t.data.message;if(\"fetch\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const a=await r.request(new URL(e.fetch.remote),e.fetch.method,e.fetch.body,e.fetch.headers,null);if(!d()&&a.body instanceof ReadableStream){const e=new Response(a.body);a.body=await e.arrayBuffer()}a.body instanceof ReadableStream||a.body instanceof ArrayBuffer?o.call(t,{type:\"fetch\",fetch:a},[a.body]):o.call(t,{type:\"fetch\",fetch:a})}(a,r,e)}catch(e){u(r,e,\"fetch\")}else if(\"websocket\"===a.type)try{e.ready||await e.init(),await async function(e,t,r){const[a,s]=r.connect(new URL(e.websocket.url),e.websocket.protocols,e.websocket.requestHeaders,(t=>{o.call(e.websocket.channel,{type:\"open\",args:[t]})}),(t=>{t instanceof ArrayBuffer?o.call(e.websocket.channel,{type:\"message\",args:[t]},[t]):o.call(e.websocket.channel,{type:\"message\",args:[t]})}),((t,r)=>{o.call(e.websocket.channel,{type:\"close\",args:[t,r]})}),(t=>{o.call(e.websocket.channel,{type:\"error\",args:[t]})}));e.websocket.channel.onmessage=e=>{\"data\"===e.data.type?a(e.data.data):\"close\"===e.data.type&&s(e.data.closeCode,e.data.closeReason)},o.call(t,{type:\"websocket\"})}(a,r,e)}catch(e){u(r,e,\"websocket\")}},await this.worker.sendMessage({type:\"set\",client:{function:\"bare-mux-remote\",args:[r.port2,t]}},[r.port2])}getInnerPort(){return this.worker.port}}class k{constructor(e){this.worker=new p(e)}createWebSocket(e,t=[],r,a){try{e=new URL(e)}catch(t){throw new DOMException(`Faiiled to construct 'WebSocket': The URL '${e}' is invalid.`)}if(!f.includes(e.protocol))throw new DOMException(`Failed to construct 'WebSocket': The URL's scheme must be either 'ws' or 'wss'. '${e.protocol}' is not allowed.`);Array.isArray(t)||(t=[t]),t=t.map(String);for(const e of t)if(!g(e))throw new DOMException(`Failed to construct 'WebSocket': The subprotocol '${e}' is invalid.`);a=a||{};return new w(e,t,this.worker,a)}async fetch(e,r){const a=new Request(e,r),s=r?.headers||a.headers,o=s instanceof Headers?Object.fromEntries(s):s,n=a.body;let c=new URL(a.url);if(c.protocol.startsWith(\"blob:\")){const e=await t(c),r=new Response(e.body,e);return r.rawHeaders=Object.fromEntries(e.headers),r}for(let e=0;;e++){let t=(await this.worker.sendMessage({type:\"fetch\",fetch:{remote:c.toString(),method:a.method,headers:o,body:n||void 0}},n?[n]:[])).fetch,s=new Response(y.includes(t.status)?void 0:t.body,{headers:new Headers(t.headers),status:t.status,statusText:t.statusText});s.rawHeaders=t.headers,s.rawResponse=t,s.finalURL=c.toString();const i=r?.redirect||a.redirect;if(!b.includes(s.status))return s;switch(i){case\"follow\":{const t=s.headers.get(\"location\");if(20>e&&null!==t){c=new URL(t,c);continue}throw new TypeError(\"Failed to fetch\")}case\"error\":throw new TypeError(\"Failed to fetch\");case\"manual\":return s}}}}console.debug(\"bare-mux: running v2.1.7 (build c56d286)\");export{k as BareClient,m as BareMuxConnection,w as BareWebSocket,n as WebSocketFields,p as WorkerConnection,d as browserSupportsTransferringStreams,k as default,e as maxRedirects,g as validProtocol};\n//# sourceMappingURL=index.mjs.map\n","import { BareClient, BareResponseFetch } from '@mercuryworkshop/bare-mux';\nimport { rewriteBlobby } from '../rewriters/url';\n\nclass EnvadeServiceWorker {\n  client: BareClient;\n\n  constructor() {\n    this.client = new BareClient();\n  }\n\n  shouldRoute({ request }: FetchEvent) {\n    return request.url.startsWith(location.origin + self.__envade$config.prefix);\n  }\n\n  async handleFetch({ request }: FetchEvent) {\n    let rewrittenUrl = self.__envade$rewrite.url.unwriteUrl(request.url);\n    try {\n      console.log('Fetching URL:', rewrittenUrl);\n\n      if (rewrittenUrl.startsWith('data:') || rewrittenUrl.startsWith('blob:')) {\n        // blobby my pet :)\n        if (rewrittenUrl.startsWith('blob:')) {\n          rewrittenUrl = rewriteBlobby(rewrittenUrl);\n        }\n        console.log('Handling data or blob URL:', rewrittenUrl);\n        const res = await fetch(rewrittenUrl, {});\n        return new Response(res.body, {\n          status: res.status,\n          statusText: res.statusText,\n          headers: res.headers,\n        });\n      }\n\n      const reqHeaders = new Headers(request.headers);\n      const target = new URL(rewrittenUrl);\n\n      reqHeaders.set('host', target.host);\n      reqHeaders.set('origin', target.origin);\n\n      let res: BareResponseFetch = await this.client.fetch(rewrittenUrl, {\n        method: request.method,\n        body: request.body,\n        headers: reqHeaders,\n        credentials: 'omit',\n        mode: request.mode === 'cors' ? request.mode : 'same-origin',\n        cache: request.cache,\n        redirect: request.redirect,\n        // @ts-expect-error\n        duplex: 'half',\n      });\n\n      const rewrittenHeaders: Headers = await self.__envade$rewrite.headers(\n        res.headers,\n        rewrittenUrl,\n      );\n\n      let body: ReadableStream | string = res.body;\n\n      if (res.body) {\n        switch (request.destination) {\n          case 'iframe':\n          case 'document':\n            console.log('Rewriting HTML');\n            body = await self.__envade$rewrite.html(await res.text(), rewrittenUrl);\n            break;\n          case 'style':\n            console.log('Rewriting CSS');\n            body = await self.__envade$rewrite.css(await res.text(), rewrittenUrl);\n            break;\n          case 'script':\n          case 'worker':\n          case 'sharedworker':\n            console.log('Rewriting JS');\n            body = await self.__envade$rewrite.javascript(await res.text(), rewrittenUrl);\n            break;\n\n          default:\n            body = res.body!;\n            break;\n        }\n      }\n\n      if (['document', 'iframe'].includes(request.destination)) {\n        const disposition = rewrittenHeaders.get('content-disposition') || '';\n        if (!/^\\s*(inline|attachment);\\s*filename=/i.test(disposition)) {\n          const type = disposition.startsWith('attachment') ? 'attachment' : 'inline';\n          const filename = res.finalURL?.split('/').pop() ?? 'download';\n          rewrittenHeaders.set(\n            'content-disposition',\n            `${type}; filename=${JSON.stringify(filename)}`,\n          );\n        }\n      }\n\n      return new Response(body, {\n        status: res.status,\n        statusText: res.statusText,\n        headers: rewrittenHeaders,\n      });\n    } catch (err: any) {\n      return this.renderError(err, rewrittenUrl);\n    }\n  }\n\n  renderError(error: Error, url: string): Response {\n    console.error('[SW] Error', error, 'for URL', url);\n    const html = `<!DOCTYPE html><html lang=\"en\"><head><meta charset=\"UTF-8\"><title>Envade – Error</title><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><style>body{font-family:sans-serif;background:#f9fafb;margin:0;padding:2em;color:#111}.container{max-width:600px;margin:auto;background:white;padding:2em;border-radius:8px;box-shadow:0 8px 24px rgba(0,0,0,0.05)}h1{font-size:1.5rem;color:#e11d48}pre{background:#f3f4f6;padding:1em;border-radius:6px;overflow-x:auto}.url{color:#1e3a8a;margin-bottom:1em;font-size:.95em;word-break:break-all}</style></head><body><div class=\"container\"><h1>Something went wrong</h1><div class=\"url\">URL: ${url}</div><div><strong>${error.message || 'Unknown error'}</strong></div><pre>${error.stack || 'No stack trace available'}</pre></div></body></html>`;\n    return new Response(html, {\n      status: 500,\n      headers: { 'Content-Type': 'text/html' },\n    });\n  }\n}\n\nself.EnvadeServiceWorker = EnvadeServiceWorker;\n","function rewriteUrl(url: string, origin?: string | URL): string {\n  url =\n    typeof url === 'string'\n      ? url\n      : url != null && typeof (url as any).toString === 'function'\n        ? (url as any).toString()\n        : '';\n\n  if (\n    url.startsWith(location.origin + self.__envade$config.prefix) ||\n    url.startsWith(self.__envade$config.prefix)\n  ) {\n    return url;\n  }\n\n  if (url.startsWith('about:')) {\n    console.log('Rewriting about URL:', url);\n    // todo: handle about: URLs\n    return url;\n  }\n\n  if (url.startsWith('javascript:')) {\n    return self.__envade$rewrite.javascript(url, origin);\n  }\n\n  if (url.startsWith('data:')) {\n    return location.origin + self.__envade$config.prefix + url;\n  }\n\n  if (url.startsWith('blob:')) {\n    const afterUrl = url.substring(url.lastIndexOf('/') + 1);\n    return (\n      location.origin +\n      self.__envade$config.prefix +\n      'blob:' +\n      self.scope$location.origin +\n      '/' +\n      afterUrl\n    );\n  }\n\n  const base = origin\n    ? new URL(typeof origin === 'string' ? self.__envade$rewrite.url.unwriteUrl(origin) : origin)\n    : location;\n\n  const resolved = new URL(url, base instanceof URL ? base : base.href).href;\n  return (\n    location.origin + self.__envade$config.prefix + self.__envade$config.codec.encode(resolved)\n  );\n}\n\nfunction unwriteUrl(writtenUrl: string): string {\n  if (!writtenUrl.startsWith(self.__envade$config.prefix)) {\n    const index = writtenUrl.indexOf(self.__envade$config.prefix);\n    if (index !== -1) {\n      writtenUrl = writtenUrl.slice(index);\n    }\n  }\n\n  if (writtenUrl.startsWith(self.__envade$config.prefix + 'blob:')) {\n    return writtenUrl.substring(self.__envade$config.prefix.length);\n  }\n\n  if (writtenUrl.startsWith(self.__envade$config.prefix + 'data:')) {\n    return writtenUrl.substring(self.__envade$config.prefix.length);\n  }\n\n  if (writtenUrl.startsWith('mailto:') || writtenUrl.startsWith('about:')) {\n    return writtenUrl;\n  }\n\n  if (writtenUrl.startsWith(self.__envade$config.prefix)) {\n    writtenUrl = new URL(writtenUrl, location.origin).pathname.replace(\n      new RegExp(`^${self.__envade$config.prefix}`),\n      '',\n    );\n  }\n  return self.__envade$config.codec.decode(writtenUrl);\n}\n\nexport function rewriteBlobby(url: string) {\n  // nice blobby\n  const bloburl = new URL(url.substring('blob:'.length));\n  return `blob:${location.origin}${bloburl.pathname}`;\n}\n\nconst url = { rewriteUrl, unwriteUrl };\n\nexport { url };\n"],"names":["globalThis","MessagePort","WebSocket","Promise","self","e","t","MessageChannel","r","i","setTimeout","TypeError","AggregateError","console","Error","l","a","BroadcastChannel","SharedWorker","EventTarget","s","Event","MessageEvent","CloseEvent","DOMException","ArrayBuffer","URL","Array","String","Request","o","Headers","Object","n","Response","BareClient","request","location","rewrittenUrl","rewriteBlobby","url","bloburl","res","fetch","reqHeaders","target","rewrittenHeaders","body","disposition","type","filename","JSON","err","error"],"mappings":"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"}